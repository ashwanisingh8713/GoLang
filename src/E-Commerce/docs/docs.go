// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support (Ashwani)",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/address": {
            "post": {
                "description": "To get address list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Get all addresses of the User.",
                "parameters": [
                    {
                        "description": "It takes UserId",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyUserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.Address"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/c_wishlist": {
            "post": {
                "description": "To create wishlist of the User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER_ITEM"
                ],
                "summary": "Creates wishlist for selected product.",
                "parameters": [
                    {
                        "description": "It takes UserId, ProductId, Quantity",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyWishlistInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userData.StatusMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cart_item": {
            "post": {
                "description": "To get cart list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER_ITEM"
                ],
                "summary": "Get all cart products of the User.",
                "parameters": [
                    {
                        "description": "It takes UserId",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyUserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cart_item.CartItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/createUser": {
            "post": {
                "description": "To get all Users list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Provides All Users.",
                "parameters": [
                    {
                        "description": "It takes UserId",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyCreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userData.StatusMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/d_wishlist": {
            "delete": {
                "description": "To delete the selected product from User's Wishlist.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER_ITEM"
                ],
                "summary": "Deletes the selected wishlistId from the Wishlist Table.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wishlist_id value",
                        "name": "wishlistId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userData.StatusMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAllUsers": {
            "post": {
                "description": "To get all Users list (userId = 09876).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Provides All Users.",
                "parameters": [
                    {
                        "description": "It takes UserId",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyUserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/r_wishlist": {
            "post": {
                "description": "Get the all wishlist of the User.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER_ITEM"
                ],
                "summary": "Shows the all wishlist of the User.",
                "parameters": [
                    {
                        "description": "It takes UserId",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyUserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/wishlist.Wishlist"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscription": {
            "post": {
                "description": "To get subscription list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER_ITEM"
                ],
                "summary": "Get all subscribed products of the User.",
                "parameters": [
                    {
                        "description": "It takes UserId",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyUserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/subscriptions.Subscription"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "To get User's information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Get User's information.",
                "parameters": [
                    {
                        "description": "It takes UserId",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userData.BodyUserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "address.Address": {
            "type": "object",
            "properties": {
                "addressId": {
                    "type": "string"
                },
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "addressType": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "isPreferred": {
                    "type": "boolean"
                },
                "mobile1": {
                    "type": "string"
                },
                "mobile2": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "cart_item.CartItem": {
            "type": "object",
            "properties": {
                "cart_item_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/products.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "products.Product": {
            "type": "object",
            "properties": {
                "category_id": {
                    "description": "2",
                    "type": "string"
                },
                "description": {
                    "description": "8",
                    "type": "string"
                },
                "dimension": {
                    "description": "3",
                    "type": "string"
                },
                "last_Updated": {
                    "description": "15",
                    "type": "string"
                },
                "manufacturer_id": {
                    "description": "4",
                    "type": "string"
                },
                "name": {
                    "description": "5",
                    "type": "string"
                },
                "picture": {
                    "description": "6",
                    "type": "string"
                },
                "price": {
                    "description": "7",
                    "type": "number"
                },
                "product_id": {
                    "description": "1",
                    "type": "string"
                },
                "seller_id": {
                    "description": "9",
                    "type": "string"
                },
                "seller_name": {
                    "description": "10",
                    "type": "string"
                },
                "sku": {
                    "description": "11",
                    "type": "string"
                },
                "sub_category_id": {
                    "description": "12",
                    "type": "string"
                },
                "subscribable": {
                    "description": "16",
                    "type": "boolean"
                },
                "units": {
                    "description": "14",
                    "type": "integer"
                },
                "weight": {
                    "description": "13",
                    "type": "number"
                }
            }
        },
        "subscriptions.Subscription": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "friday": {
                    "type": "boolean"
                },
                "monday": {
                    "type": "boolean"
                },
                "order_id": {
                    "description": "This is OrderItemId",
                    "type": "string"
                },
                "pauseDates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product": {
                    "$ref": "#/definitions/products.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "saturday": {
                    "type": "boolean"
                },
                "startDate": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "sunday": {
                    "type": "boolean"
                },
                "thursday": {
                    "type": "boolean"
                },
                "tuesday": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                },
                "wednesday": {
                    "type": "boolean"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login_mode": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "userData.BodyCreateUserInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login_mode": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "userData.BodyUserIdInput": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "userData.BodyWishlistInput": {
            "type": "object",
            "required": [
                "productId",
                "quantity",
                "userId"
            ],
            "properties": {
                "productId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "userData.StatusMsg": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "wishlist.Wishlist": {
            "type": "object",
            "properties": {
                "Created_at": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "wishlist_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "192.168.13.119:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "APIs of E-Commerce Project",
	Description:      "This is E-Commerce API Server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
