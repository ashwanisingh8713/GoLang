basePath: /
definitions:
  address.Address:
    properties:
      addressId:
        type: string
      addressLine1:
        type: string
      addressLine2:
        type: string
      addressType:
        type: string
      city:
        type: string
      country:
        type: string
      isPreferred:
        type: boolean
      mobile1:
        type: string
      mobile2:
        type: string
      state:
        type: string
      userId:
        type: string
      zip:
        type: string
    type: object
  cart_item.CartItem:
    properties:
      cart_item_id:
        type: string
      created_at:
        type: string
      modified_at:
        type: string
      product:
        $ref: '#/definitions/products.Product'
      product_id:
        type: string
      quantity:
        type: integer
      user_id:
        type: string
    type: object
  data.Action:
    properties:
      api:
        type: string
      destination:
        description: Screen destination
        type: string
      method:
        type: string
      query:
        description: API Query
        type: string
    type: object
  data.Profile:
    properties:
      cta_profile:
        items:
          $ref: '#/definitions/data.ProfileCta'
        type: array
      profile_pic:
        type: string
      user_email:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    type: object
  data.ProfileCta:
    properties:
      action:
        $ref: '#/definitions/data.Action'
      title:
        type: string
      value:
        $ref: '#/definitions/data.Value'
    type: object
  data.Value:
    properties:
      banner_1x:
        type: string
      banner_2x:
        type: string
      banner_3x:
        type: string
      banner_4x:
        type: string
      thumb_1x:
        type: string
      thumb_2x:
        type: string
      thumb_3x:
        type: string
      thumb_4x:
        type: string
    type: object
  products.BodyProductIdInput:
    properties:
      productId:
        type: string
    required:
    - productId
    type: object
  products.BodyProductInput:
    properties:
      category_id:
        description: "2"
        type: string
      description:
        description: "8"
        type: string
      dimension:
        description: "3"
        type: string
      manufacturer_id:
        description: "4"
        type: string
      name:
        description: "5"
        type: string
      picture:
        description: "6"
        type: string
      price:
        description: "7"
        type: number
      seller_id:
        description: "9"
        type: string
      seller_name:
        description: "10"
        type: string
      sku:
        description: "11"
        type: string
      sub_category_id:
        description: "12"
        type: string
      subscribable:
        description: "15"
        type: boolean
      units:
        description: "14"
        type: integer
      weight:
        description: "13"
        type: number
    type: object
  products.Product:
    properties:
      category_id:
        description: "2"
        type: string
      description:
        description: "8"
        type: string
      dimension:
        description: "3"
        type: string
      last_Updated:
        description: "15"
        type: string
      manufacturer_id:
        description: "4"
        type: string
      name:
        description: "5"
        type: string
      picture:
        description: "6"
        type: string
      price:
        description: "7"
        type: number
      product_id:
        description: "1"
        type: string
      seller_id:
        description: "9"
        type: string
      seller_name:
        description: "10"
        type: string
      sku:
        description: "11"
        type: string
      sub_category_id:
        description: "12"
        type: string
      subscribable:
        description: "16"
        type: boolean
      units:
        description: "14"
        type: integer
      weight:
        description: "13"
        type: number
    type: object
  response.SubscriptionPageMockResponse:
    properties:
      data:
        items:
          properties:
            children:
              items:
                properties:
                  action:
                    properties:
                      api:
                        type: string
                      destination:
                        type: string
                      method:
                        type: string
                      query:
                        type: string
                    type: object
                  background_color:
                    properties:
                      alpha:
                        type: integer
                      hue:
                        type: integer
                      lighting:
                        type: integer
                      saturation:
                        type: integer
                    type: object
                  product_id:
                    type: string
                  product_info:
                    properties:
                      display_selling_scale:
                        type: string
                      offer_percentage:
                        type: string
                      offer_price:
                        type: integer
                      quantity:
                        type: integer
                      unit_price:
                        type: integer
                    type: object
                  subscription_info:
                    properties:
                      created_at:
                        type: string
                      end_date:
                        type: string
                      friday:
                        type: boolean
                      monday:
                        type: boolean
                      order_id:
                        type: string
                      pause_dates:
                        type: string
                      product_id:
                        type: string
                      saturday:
                        type: boolean
                      start_date:
                        type: string
                      subscription_id:
                        type: string
                      sunday:
                        type: boolean
                      thursday:
                        type: boolean
                      tuesday:
                        type: boolean
                      user_id:
                        type: string
                      wednesday:
                        type: boolean
                    type: object
                  title:
                    type: string
                  type:
                    type: string
                  value:
                    properties:
                      banner_1x:
                        type: string
                      banner_2x:
                        type: string
                      banner_3x:
                        type: string
                      banner_4x:
                        type: string
                      thumb_1x:
                        type: string
                      thumb_2x:
                        type: string
                      thumb_3x:
                        type: string
                      thumb_4x:
                        type: string
                    type: object
                type: object
              type: array
            gridColumn:
              type: integer
            subscription: {}
            view_group_type:
              type: string
          type: object
        type: array
    type: object
  response.ViewGroupMockResponse:
    properties:
      data:
        items:
          properties:
            children:
              items:
                properties:
                  action:
                    properties:
                      api:
                        type: string
                      destination:
                        type: string
                      method:
                        type: string
                      query:
                        type: string
                    type: object
                  background_color:
                    properties:
                      alpha:
                        type: integer
                      hue:
                        type: integer
                      lighting:
                        type: integer
                      saturation:
                        type: integer
                    type: object
                  product_id:
                    type: string
                  product_info:
                    properties:
                      display_selling_scale:
                        type: string
                      offer_percentage:
                        type: string
                      offer_price:
                        type: integer
                      quantity:
                        type: integer
                      unit_price:
                        type: integer
                    type: object
                  subscription_info:
                    properties:
                      created_at:
                        type: string
                      end_date:
                        type: string
                      friday:
                        type: boolean
                      monday:
                        type: boolean
                      order_id:
                        type: string
                      pause_dates:
                        type: string
                      product_id:
                        type: string
                      saturday:
                        type: boolean
                      start_date:
                        type: string
                      subscription_id:
                        type: string
                      sunday:
                        type: boolean
                      thursday:
                        type: boolean
                      tuesday:
                        type: boolean
                      user_id:
                        type: string
                      wednesday:
                        type: boolean
                    type: object
                  title:
                    type: string
                  type:
                    type: string
                  value:
                    properties:
                      banner_1x:
                        type: string
                      banner_2x:
                        type: string
                      banner_3x:
                        type: string
                      banner_4x:
                        type: string
                      thumb_1x:
                        type: string
                      thumb_2x:
                        type: string
                      thumb_3x:
                        type: string
                      thumb_4x:
                        type: string
                    type: object
                type: object
              type: array
            gridColumn:
              type: integer
            header:
              properties:
                action:
                  properties:
                    api:
                      type: string
                    destination:
                      type: string
                    method:
                      type: string
                    query:
                      type: string
                  type: object
                background_color:
                  properties:
                    alpha:
                      type: integer
                    hue:
                      type: integer
                    lighting:
                      type: integer
                    saturation:
                      type: integer
                  type: object
                ctaTitle:
                  type: string
                title:
                  type: string
                type:
                  type: string
              type: object
            view_group_type:
              type: string
          type: object
        type: array
    type: object
  subscriptions.Subscription:
    properties:
      createdAt:
        type: string
      endDate:
        type: string
      friday:
        type: boolean
      monday:
        type: boolean
      order_id:
        description: This is OrderItemId
        type: string
      pauseDates:
        items:
          type: string
        type: array
      product:
        $ref: '#/definitions/products.Product'
      product_id:
        type: string
      saturday:
        type: boolean
      startDate:
        type: string
      subscription_id:
        type: string
      sunday:
        type: boolean
      thursday:
        type: boolean
      tuesday:
        type: boolean
      user_id:
        type: string
      wednesday:
        type: boolean
    type: object
  user.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      login_mode:
        type: string
      mobile:
        type: string
      password:
        type: string
      user_id:
        type: string
    type: object
  userdata.BodyAddressInput:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      addressType:
        type: string
      city:
        type: string
      country:
        type: string
      isPreferred:
        type: boolean
      mobile1:
        type: string
      mobile2:
        type: string
      state:
        type: string
      userId:
        type: string
      zip:
        type: string
    type: object
  userdata.BodyCreateUserInput:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      login_mode:
        type: string
      mobile:
        type: string
      password:
        type: string
    type: object
  userdata.BodyItemUserIdInput:
    properties:
      productId:
        type: string
      userId:
        type: string
    required:
    - productId
    - userId
    type: object
  userdata.BodySelectedProductInput:
    properties:
      productId:
        type: string
      quantity:
        type: integer
      userId:
        type: string
    required:
    - productId
    - quantity
    - userId
    type: object
  userdata.BodyUserIdInput:
    properties:
      userId:
        type: string
    required:
    - userId
    type: object
  userdata.StatusMsg:
    properties:
      msg:
        type: string
      status:
        type: boolean
    type: object
  wishlist.Wishlist:
    properties:
      Created_at:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
      user_id:
        type: string
      wishlist_id:
        type: string
    type: object
host: 192.168.13.72:8080
info:
  contact:
    email: support@swagger.io
    name: API Support (Ashwani)
    url: http://www.swagger.io/support
  description: This is E-Commerce API Server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: APIs of E-Commerce Project
  version: "1.0"
paths:
  /address:
    post:
      consumes:
      - application/json
      description: To get address list.
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyUserIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/address.Address'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all addresses of the User.
      tags:
      - User
  /c_product:
    post:
      consumes:
      - application/json
      description: To create and save Product Data.
      parameters:
      - description: All fields are required
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/products.BodyProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userdata.StatusMsg'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates Product.
      tags:
      - Product
  /c_wishlist:
    post:
      consumes:
      - application/json
      description: To create wishlist of the User
      parameters:
      - description: It takes UserId, ProductId, Quantity
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodySelectedProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userdata.StatusMsg'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates wishlist for selected product.
      tags:
      - Wishlist
  /createAddress:
    post:
      consumes:
      - application/json
      description: Creates or Add Address of the User.
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyAddressInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userdata.StatusMsg'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates or Add Address of the User.
      tags:
      - User
  /createCart:
    post:
      consumes:
      - application/json
      description: Create or Add Cart Item
      parameters:
      - description: It takes UserId, productId, quantity
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodySelectedProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cart_item.CartItem'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add item into the Cart of the User.
      tags:
      - Cart
  /createUser:
    post:
      consumes:
      - application/json
      description: To create and save User Data.
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyCreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userdata.StatusMsg'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates User .
      tags:
      - User
  /d_wishlist:
    delete:
      consumes:
      - application/json
      description: To delete the selected product from User's Wishlist.
      parameters:
      - description: wishlist_id value
        in: query
        name: wishlistId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userdata.StatusMsg'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Deletes the selected wishlistId from the Wishlist Table.
      tags:
      - Wishlist
  /deleteCart:
    delete:
      consumes:
      - application/json
      description: Delete cart item from the Cart
      parameters:
      - description: It takes userId, productId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyItemUserIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userdata.StatusMsg'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete cart item from the Cart.
      tags:
      - Cart
  /ec:
    get:
      description: To get Home's Views Group
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ViewGroupMockResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Provides HomePage Views Groups
      tags:
      - ViewGroup
  /explore:
    get:
      description: To get response of Explore Btn CTA
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ViewGroupMockResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Explore Click To Action
      tags:
      - ViewGroup
  /getAllUsers:
    post:
      consumes:
      - application/json
      description: To get all Users list (userId = 09876).
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyUserIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Provides All Users.
      tags:
      - User
  /getCart:
    post:
      consumes:
      - application/json
      description: To get cart list.
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyUserIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cart_item.CartItem'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all cart products of the User.
      tags:
      - Cart
  /onboarding:
    get:
      description: To get response of OnBoarding Page ViewGroup
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SubscriptionPageMockResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: OnBoarding Page ViewGroup
      tags:
      - ViewGroup
  /profile:
    get:
      description: To get ProfilePage Views Group
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Profile'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Provides ProfilePage Views Groups
      tags:
      - ViewGroup
  /r_product:
    post:
      consumes:
      - application/json
      description: To get Product Data.
      parameters:
      - description: It takes productId.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/products.BodyProductIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Product .
      tags:
      - Product
  /r_wishlist:
    post:
      consumes:
      - application/json
      description: Get the all wishlist of the User.
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyUserIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/wishlist.Wishlist'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Shows the all wishlist of the User.
      tags:
      - Wishlist
  /subscription:
    get:
      description: To get response of Subscription Page ViewGroup
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SubscriptionPageMockResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Subscription Page ViewGroup
      tags:
      - ViewGroup
    post:
      consumes:
      - application/json
      description: To get subscription list.
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyUserIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/subscriptions.Subscription'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all subscribed products of the User.
      tags:
      - Subscription
  /user:
    post:
      consumes:
      - application/json
      description: To get User's information.
      parameters:
      - description: It takes UserId
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/userdata.BodyUserIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User's information.
      tags:
      - User
schemes:
- http
swagger: "2.0"
